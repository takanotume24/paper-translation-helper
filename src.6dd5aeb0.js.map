{"version":3,"sources":["index.ts"],"names":[],"mappings":";AAiGA,aAjGA,IAAA,EAAA,WAEI,SAAA,IAAA,IAAA,EAAA,KAMO,KAAA,OAAS,WACR,IAAA,EAAmB,SAAS,eAAe,YAC/C,EAAK,WAAW,IAPX,KAAA,WAAa,KACd,IAAA,EAAmB,SAAS,eAAe,YAC1C,KAAA,WAAW,GA0FxB,OAhFY,EAAA,UAAA,WAAR,SAAmB,GACT,IAAA,EAAqB,SAAS,eAAe,cAC9C,KAAA,WAAa,OAAO,EAAmB,OACxC,KAAK,WAAa,MACb,KAAA,WAAa,IAClB,EAAmB,MAAQ,QAG3B,IAAA,EAAoB,SAAS,eAAe,aAC5C,GAAC,EAAD,CAIA,IAAA,EAAS,EAAiB,MAC1B,GAAC,EAAD,CAiBE,IAAA,GAFN,GADA,GADA,GADA,GADA,GADA,GADA,GADA,GADA,GADA,GADA,GADA,GADA,EAAS,EAAO,QAAQ,OAAQ,KAChB,QAAQ,MAAO,MACf,QAAQ,MAAO,KACf,QAAQ,UAAW,SACnB,QAAQ,SAAU,QAClB,QAAQ,WAAY,UACpB,QAAQ,SAAU,QAClB,QAAQ,YAAa,WACrB,QAAQ,SAAU,QAClB,QAAQ,WAAY,SACpB,QAAQ,qBAAsB,WAC9B,QAAQ,4BAA6B,WACrC,QAAQ,2BAA4B,WAE7B,MAAM,MAAM,IAAI,SAAA,GAAU,OAAA,EAAG,QAChD,EAAsB,KAAK,aAAa,GAE5C,EAAkB,UAAY,KAAK,WAAW,MAG1C,EAAA,UAAA,WAAR,SAAmB,GAAnB,IAAA,EAAA,KACQ,EAAS,GACT,EAAI,EAID,OAHP,EAAS,QAAQ,SAAA,GACb,GAAU,EAAK,OAAO,EAAQ,KAAK,IAAK,OAErC,GAEH,EAAA,UAAA,OAAR,SAAe,EAAgB,GACrB,IAAA,EAAe,cAAc,EAAS,IACrC,MAAA,wDACU,EAAY,yBAChB,EAAS,4BAA4B,EAAO,OAAM,yEAEvB,EAAY,IAAI,EAAM,oBAG1D,EAAA,UAAA,aAAR,SAAqB,GAMV,IAJH,IAAA,EAAa,EACb,EAAU,GACV,EAAI,EAED,EAAI,EAAQ,QAAQ,CAEhB,IADH,IAAA,EAAsB,GACnB,EAAa,KAAK,cACjB,EAAQ,QAAU,MAGlB,EAAa,EAAQ,GAAG,OAAS,KAAK,aAG1C,EAAU,KAAK,EAAQ,IACvB,GAAc,EAAQ,GAAG,OACzB,IAGJ,EAAa,EACb,EAAQ,KAAK,GAEV,OAAA,GAGf,EA/FA,GAiGA,OAAO,OAAS,WAAhB,IAAA,EAAA,EACQ,EAAU,IAAI,EACiB,QAAnC,EAAA,SAAS,eAAe,mBAAW,IAAA,GAAA,EAAE,iBAAiB,QAAS,EAAQ,QAClC,QAArC,EAAA,SAAS,eAAe,qBAAa,IAAA,GAAA,EAAE,iBAAiB,SAAU,EAAQ","file":"src.6dd5aeb0.js","sourceRoot":"../src","sourcesContent":["class OriginalInputHandler {\n    private char_limit: number\n    constructor() {\n        this.char_limit = 4500\n        var original_element = document.getElementById(\"original\") as HTMLInputElement;\n        this.showResult(original_element);\n    }\n\n    public doWork = () => {\n        var original_element = document.getElementById(\"original\") as HTMLInputElement;\n        this.showResult(original_element);\n    }\n\n\n\n    private showResult(original_element: HTMLInputElement) {\n        const char_limit_element = document.getElementById(\"char_limit\") as HTMLInputElement\n        this.char_limit = Number(char_limit_element.value)\n        if (this.char_limit < 1000) {\n            this.char_limit = 1000\n            char_limit_element.value = \"1000\"\n        }\n\n        var converted_element = document.getElementById(\"converted\");\n        if (!converted_element) {\n            return;\n        }\n\n        var source = original_element.value;\n        if (!source) {\n            return\n        }\n        source = source.replace(/-\\n/g, \"\")\n        source = source.replace(/\\n/g, \" \")\n        source = source.replace(/- /g, \"\")\n        source = source.replace(/Fig\\. /g, \"Fig.\")\n        source = source.replace(/No\\. /g, \"No.\")\n        source = source.replace(/Prof\\. /g, \"Prof.\")\n        source = source.replace(/Eq\\. /g, \"Eq.\")\n        source = source.replace(/et al\\. /g, \"et al.\")\n        source = source.replace(/Dr\\. /g, \"Dr.\")\n        source = source.replace(/e\\.g\\. /g, \"e.g.\")\n        source = source.replace(/\\.[\\d+](?= [A-Z])/g, \"[$&]. \") //for \"Neurology\"\n        source = source.replace(/\\.[\\d+,]+[\\d+](?= [A-Z])/g, \"[$&]. \") //for \"Neurology\"\n        source = source.replace(/\\.[\\d+]–[\\d+](?= [A-Z])/g, \"[$&]. \") //for \"Neurology\", \"–\" is dash\n\n        const strings = source.split(\". \").map(str => `${str}.\\n`)\n        var results: string[][] = this.spilit_array(strings)\n\n        converted_element.innerHTML = this.show_boxes(results)\n    }\n\n    private show_boxes(stringss: string[][]): string {\n        var result = \"\"\n        var i = 0\n        stringss.forEach(strings => {\n            result += this.in_box(strings.join(\"\"), i++)\n        })\n        return result\n    }\n    private in_box(string: string, colmn_num: number): string {\n        const text_area_id = `\"text_area_${colmn_num}\"`\n        return `<li class=\"list-group-item\">\n            <label for=${text_area_id}>\n                No.${colmn_num}, Number of characters : ${string.length}\n            </label>\n            <textarea class=\"form-control\" id=${text_area_id}>${string}</textarea></li>`\n    }\n\n    private spilit_array(strings: string[]): string[][] {\n\n        var char_count = 0\n        var results = []\n        var i = 0\n\n        while (i < strings.length) {\n            var new_array: string[] = []\n            while (char_count < this.char_limit) {\n                if (strings.length <= i) {\n                    break\n                }\n                if (char_count + strings[i].length > this.char_limit) {\n                    break\n                }\n                new_array.push(strings[i])\n                char_count += strings[i].length\n                i++\n\n            }\n            char_count = 0\n            results.push(new_array)\n        }\n        return results\n    }\n\n}\n\nwindow.onload = () => {\n    var handler = new OriginalInputHandler();\n    document.getElementById(\"original\")?.addEventListener(\"input\", handler.doWork);\n    document.getElementById(\"char_limit\")?.addEventListener(\"change\", handler.doWork)\n};"]}