{"version":3,"sources":["lib/split_into_columns.ts","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v1.js","../node_modules/uuid/dist/esm-browser/parse.js","../node_modules/uuid/dist/esm-browser/v35.js","../node_modules/uuid/dist/esm-browser/md5.js","../node_modules/uuid/dist/esm-browser/v3.js","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/uuid/dist/esm-browser/sha1.js","../node_modules/uuid/dist/esm-browser/v5.js","../node_modules/uuid/dist/esm-browser/nil.js","../node_modules/uuid/dist/esm-browser/version.js","../node_modules/uuid/dist/esm-browser/index.js","lib/format_and_split_text_Into_columns.ts","lib/create_html_for_columns.ts","lib/original_input_handler.ts","index.ts"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","Error","exports","default","_default","_regex","_interopRequireDefault","require","obj","__esModule","validate","uuid","REGEX","test","_validate","byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","stringify","TypeError","_rng","_stringify","_nodeId","_clockseq","_lastMSecs","_lastNSecs","v1","options","buf","b","Array","node","clockseq","undefined","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","n","parse","v","parseInt","_parse","stringToBytes","str","unescape","encodeURIComponent","bytes","length","charCodeAt","DNS","URL","v35","name","version","hashfunc","generateUUID","value","namespace","_namespace","set","err","md5","msg","md5ToHexEncodedArray","wordsToMd5","bytesToWords","input","output","length32","x","hex","charAt","getOutputLength","inputLength8","len","a","c","d","olda","oldb","oldc","oldd","md5ff","md5gg","md5hh","md5ii","safeAdd","length8","Uint32Array","y","lsw","bitRotateLeft","num","cnt","md5cmn","q","s","t","_v","_md","v3","randomUUID","_native","v4","native","rnds","f","z","ROTL","sha1","K","H","isArray","prototype","call","l","N","Math","ceil","M","j","pow","floor","W","e","T","_sha","v5","_v2","_v3","_v4","_nil","_version"],"mappings":"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","file":"src.e6f5fc69.js","sourceRoot":"../src","sourcesContent":["export function splitIntoColumns(\n    sentences: string[],\n    charLimit: number,\n): string[][] {\n    let charCount = 0;\n    let results: string[][] = [];\n    let currentColumn: string[] = [];\n\n    sentences.forEach(sentence => {\n        // Check if adding this sentence exceeds charLimit or if the sentence itself exceeds charLimit\n        if (charCount + sentence.length > charLimit || sentence.length > charLimit) {\n            // Push currentColumn to results if it's not empty\n            if (currentColumn.length > 0) {\n                results.push(currentColumn);\n                currentColumn = [];\n            }\n\n            // If the sentence itself exceeds charLimit, it should be in its own column\n            if (sentence.length > charLimit) {\n                results.push([sentence]);\n                // Reset charCount as the long sentence is placed in its own column\n                charCount = 0;\n                return; // Continue to next sentence\n            }\n        }\n\n        currentColumn.push(sentence);\n        charCount += sentence.length;\n    });\n\n    // Push the last column if not empty\n    if (currentColumn.length > 0) {\n        results.push(currentColumn);\n    }\n\n    return results;\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport { unsafeStringify } from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || unsafeStringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import { unsafeStringify } from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return unsafeStringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  const output = [];\n  const length32 = input.length * 32;\n  const hexTab = '0123456789abcdef';\n\n  for (let i = 0; i < length32; i += 8) {\n    const x = input[i >> 5] >>> i % 32 & 0xff;\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  const length8 = input.length * 8;\n  const output = new Uint32Array(getOutputLength(length8));\n\n  for (let i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  const lsw = (x & 0xffff) + (y & 0xffff);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nconst v3 = v35('v3', 0x30, md5);\nexport default v3;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nconst v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.slice(14, 15), 16);\n}\n\nexport default version;","export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as NIL } from './nil.js';\nexport { default as version } from './version.js';\nexport { default as validate } from './validate.js';\nexport { default as stringify } from './stringify.js';\nexport { default as parse } from './parse.js';","import { splitIntoColumns } from './split_into_columns'\nimport { v4 as uuidv4 } from 'uuid';\n\nexport function formatAndSplitTextIntoColumns(\n    text: string,\n    charLimit: number,\n): string[][] {\n    if (text === \"\") {\n        return [[\"\"]]\n    }\n\n    const dummy = uuidv4()\n    text = text.replace(/\\. /g, dummy)\n\n    const replacements: [RegExp, string | ((substring: string) => string)][] = [\n        [/-\\n/g, ''], // Ensure hyphen followed by newline is completely removed\n        [/\\n/g, \" \"], // Replaces newlines with spaces\n        [/- /g, \"\"], // Removes hyphens followed by a space\n        [RegExp(`Fig${dummy}`, \"g\"), \"Fig. \"], // Formats abbreviation for \"Figure\"\n        [RegExp(`Figs${dummy}`, \"g\"), \"Figs. \"], // Formats abbreviation for \"Figures\"\n        [RegExp(`No${dummy}`, \"g\"), \"No. \"], // Formats abbreviation for \"Number\"\n        [RegExp(`Prof${dummy}`, \"g\"), \"Prof. \"], // Formats abbreviation for \"Professor\"\n        [RegExp(`Eq${dummy}`, \"g\"), \"Eq. \"], // Formats abbreviation for \"Equation\"\n        [RegExp(`et al${dummy}`, \"g\"), \"et al. \"], // Formats \"et al.\"\n        [RegExp(`Dr${dummy}`, \"g\"), \"Dr. \"], // Formats abbreviation for \"Doctor\"\n        [RegExp(`e\\.g${dummy}`, \"g\"), \"e.g. \"], // Formats \"e.g.\"\n        [RegExp(`i\\.e${dummy}`, \"g\"), \"i.e. \"], // Formats \"i.e.\"\n        [RegExp(`etc${dummy}`, \"g\"), \"etc. \"], // Formats \"etc.\"\n        [RegExp(`Sec${dummy}`, \"g\"), \"Sec. \"], // Formats abbreviation for \"Section\"\n        [RegExp(`Sect${dummy}`, \"g\"), \"Sect. \"], // Formats abbreviation for \"Section\"\n        [RegExp(`Section${dummy}`, \"g\"), \"Section. \"], // Formats abbreviation for \"Section\"\n        [RegExp(`2\\.4 GHz`, \"g\"), \"2.4GHz\"], // Formats specific frequency value\n        [RegExp(`I${dummy}`, \"g\"), \"I. \"],\n        [RegExp(`II${dummy}`, \"g\"), \"II. \"],\n        [RegExp(`III${dummy}`, \"g\"), \"III. \"],\n        [RegExp(`IV${dummy}`, \"g\"), \"IV. \"],\n        [RegExp(`V${dummy}`, \"g\"), \"V. \"],\n        [RegExp(`VI${dummy}`, \"g\"), \"VI. \"],\n        [RegExp(`VII${dummy}`, \"g\"), \"VII. \"],\n        [RegExp(`VIII${dummy}`, \"g\"), \"VIII. \"],\n        [RegExp(`IX${dummy}`, \"g\"), \"IX. \"],\n        [RegExp(`X${dummy}`, \"g\"), \"X. \"],\n        [/\\.\\d+,\\d+(?= [A-Z])/g, match => \"[\" + match + \"]. \"], // Formats numbers with commas\n        [/\\.\\d+-\\d+(?= [A-Z])/g, match => \"[\" + match + \"]. \"], // Formats number ranges\n    ];\n\n    // Process replacements\n    let processedText = text;\n    replacements.forEach(([regex, replacement]) => {\n        processedText = processedText.replace(regex, (match) => typeof replacement === \"function\" ? replacement(match) : replacement);\n    });\n\n    // Split the processed text into sentences\n    let sentences = processedText.split(RegExp(`${dummy}`, \"s\"));\n\n    sentences = sentences.map(item => {\n        if (!item.endsWith('.')) {\n            return item + '.';\n        }\n        return item;\n    });\n    // Use the splitIntoColumns function to split the sentences into columns\n    return splitIntoColumns(sentences, charLimit);\n}\n","export function createHtmlForColumns(columns: string[][]): string {\n    return columns.map((column, index) =>\n        `<li class=\"list-group-item\">\n            <label for=\"text_area_${index}\">\n                No.${index}, Number of characters : ${column.join(\"\").length}\n            </label>\n            <textarea class=\"form-control\" id=\"text_area_${index}\">${column.join(\"\\n\")}</textarea>\n        </li>`\n    ).join(\"\");\n}\n","import {formatAndSplitTextIntoColumns} from './format_and_split_text_Into_columns'\nimport {createHtmlForColumns} from './create_html_for_columns'\n\nexport class OriginalInputHandler {\n    private charLimit = 4500;\n\n    constructor() {\n        this.initializeEventListeners();\n    }\n\n    private initializeEventListeners() {\n        window.onload = () => {\n            const originalElement = document.getElementById(\"original\");\n            const charLimitElement = document.getElementById(\"char_limit\");\n\n            originalElement?.addEventListener(\"input\", this.handleInput);\n            charLimitElement?.addEventListener(\"change\", this.handleInput);\n        };\n    }\n\n    private handleInput = (): void => {\n        const originalElement = document.getElementById(\"original\") as HTMLInputElement | null;\n        const charLimitElement = document.getElementById(\"char_limit\") as HTMLInputElement | null;\n\n        if (!originalElement || !charLimitElement) return;\n\n        this.charLimit = Math.max(Number(charLimitElement.value), 1000);\n        charLimitElement.value = this.charLimit.toString();\n\n        const source = originalElement.value;\n        if (!source) return;\n\n        const convertedText = formatAndSplitTextIntoColumns(\n            source,\n            this.charLimit,\n        );\n        const html = createHtmlForColumns(convertedText)\n        this.displayConvertedText(html);\n    }\n\n    private displayConvertedText(html: string): void {\n        const convertedElement = document.getElementById(\"converted\");\n        if (!convertedElement) return;\n\n        convertedElement.innerHTML = html;\n    }\n}\n","import { OriginalInputHandler } from \"./lib/original_input_handler\"\n\nnew OriginalInputHandler();\n"]}